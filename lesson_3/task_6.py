"""
Домашнее задание к 3-му уроку 'Алгоритмы и струтуры данных на Python'
Студент Максим Сапунов Jenny6199@yandex.ru 22.07.2021

Задача №6. В одномерном массиве найти сумму элементов, находящихся между минимальным и максимальным элементами.
 Сами минимальный и максимальный элементы в сумму не включать.
"""
from random import randrange

# Заполняем массив случайными значениями.
arr_1 = [randrange(0, 100) for el in range(100)]

# Находим минимальное и максимальное значение в элементах массива и их индексы.
# Можно не использовать встроенные функции min и max и осуществлять поиск миним. и максим. значения в цикле.
# Comprehensions необходимы, так как в больших массивах может быть несколько одинаковых значений для максим. и миним.
max_value = max(arr_1)
max_index = [el for el in range(len(arr_1)) if arr_1[el] == max_value]
min_value = min(arr_1)
min_index = [el for el in range(len(arr_1)) if arr_1[el] == min_value]

# Далее отрабатываем возможные ситуации по количеству значений:
fall_message = ' Расчет суммы промежуточных элементов без указания барьерного элемента невозможен.'

if len(max_index) == 1 and len(max_index) == 1:     # Частный случай когда получено по одному элементу.
    max_index = int(max_index[0])
    min_index = int(min_index[0])
    # Отрабатываем вариант различного расположения максимального и минимального значения в массиве
    # так как по условию учебной задачи массив не отсортирован (т.е. бинарный поиск осуществить нельзя).
    if min_index > max_index:
        result = sum(arr_1[max_index+1:min_index])
    else:
        result = sum(arr_1[min_index+1:max_index])
    print(f' В данном массиве имеется один элемент с минимальным и один элемент с максимальным значением.\n'
          f' Cумма промежуточных элементов между:\n'
          f' {min_value} в позиции - {min_index}  и {max_value} в позиции - {max_index}\n'
          f' составляет - {result}.')
# Если получено более одного максимального или минимального значения последующий достоверный расчет промежуточных
# элементов согласно условию учебной задачи невозможен.
# Необходимо отдельно указывать барьерные элементы. Решено программу не усложнять.
# Выводится соответствующее сообщение.
elif len(max_index) > 1 and len(min_index) == 1:
    print(f' Получено более одного элемента с максимальным значением.'
          f' Максимальное значение {max_value} для элементов в позициях: {max_index}.'
          f'\n{fall_message}')
elif len(min_index) > 1 and len(max_index) == 1:
    print(f' Получено более одного элемента с минимальным значением.'
          f' Минимальное значение {min_value} для элементов в позициях {min_index}.'
          f'\n{fall_message}')
else:
    print(f' Получено несколько элементов с максимальным и минимальным значениями.\n'
          f' Позиции элементов с максимальным значением {max_value} - {max_index}.\n'
          f' Позиции элементов с минимальным значением {min_value} - {min_index}.'
          f'\n{fall_message}')
